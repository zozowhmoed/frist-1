{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","Timer","_ref","user","onBack","groupId","isRunning","setIsRunning","useState","time","setTime","points","setPoints","lastUpdateTime","setLastUpdateTime","members","setMembers","showMembers","setShowMembers","isCreator","setIsCreator","loadingMembers","setLoadingMembers","bannedMembers","setBannedMembers","onlineUsers","setOnlineUsers","darkMode","setDarkMode","language","setLanguage","notification","setNotification","studySessions","setStudySessions","activeTab","setActiveTab","sideMenuOpen","setSideMenuOpen","inventory","setInventory","activeEffects","setActiveEffects","hoveredItem","setHoveredItem","calculateLevel","level","requiredPoints","totalPointsNeeded","Math","floor","pointsForCurrentLevel","currentLevel","nextLevelPoints","progress","pointsToNextLevel","currentBadge","badges","name","icon","color","bgColor","Object","keys","map","Number","filter","lvl","sort","a","b","getBadge","showNotification","message","setTimeout","formatTime","seconds","hrs","mins","secs","concat","toString","padStart","useEffect","fetchGroupData","async","groupDoc","getDoc","doc","exists","_groupData$userPoints","groupData","data","creator","uid","userPoints","membersPromises","userDoc","_groupData$userPoints2","displayName","photoURL","membersList","Promise","all","Boolean","error","console","unsubscribe","onSnapshot","interval","setInterval","randomOnline","random","member","clearInterval","prev","newPoints","_groupDoc$data$banned","includes","updateDoc","updatePoints","newLevelData","savedMode","JSON","parse","localStorage","getItem","document","documentElement","setAttribute","savedLang","toggleBanMember","window","confirm","memberId","runTransaction","transaction","get","Error","currentBanned","isBanned","updates","id","banHistory","arrayUnion","bannedBy","timestamp","Date","action","update","applyEffect","effect","boxShadow","animation","transform","transition","_jsxs","className","children","_jsx","onClick","style","backgroundColor","borderLeft","type","checked","onChange","toggleDarkMode","newMode","setItem","stringify","value","e","changeLanguage","lang","target","round","width","disabled","resetTimer","addStudySession","duration","pointsEarned","newSession","date","slice","src","alt","length","session","index","toLocaleDateString","description","price","hoverEffect","item","_objectSpread","borderColor","onMouseEnter","onMouseLeave","purchaseItem","_Fragment","title","updatedMembers","m","updatedUserPoints","removeMember","App","setUser","groupName","setGroupName","groups","setGroups","loadingGroups","setLoadingGroups","selectedGroup","setSelectedGroup","showJoinModal","setShowJoinModal","joinCode","setJoinCode","hoveredGroup","setHoveredGroup","onAuthStateChanged","currentUser","setDoc","email","lastLogin","merge","fetchUserGroups","q","query","collection","where","userId","querySnapshot","getDocs","groupsPromises","docs","_groupData$bannedMemb","docSnap","creatorDoc","creatorName","code","toUpperCase","some","g","addStudyGroup","trim","newGroup","createdAt","addDoc","handleBackToGroups","signOut","provider","GoogleAuthProvider","result","signInWithPopup","placeholder","onKeyPress","key","querySelector","focus","group","handleJoinGroup","groupItem","getElementById","opacity","resolve","deleteDoc","deleteGroup","stopPropagation","maxLength","allGroupsQuery","allGroupsSnapshot","groupToJoin","forEach","groupCode","_groupToJoin$bannedMe","getFullYear","location","hostname","match","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","log","ReactDOM","render","React","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b418adc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, deleteDoc, doc, updateDoc, getDoc, query, where, setDoc, onSnapshot, runTransaction, arrayUnion } from 'firebase/firestore';\nimport './App.css';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDoLr3Dnb5YbCnUtTexaz84YOH5h8Ukfoc\",\n  authDomain: \"frist-b073a.firebaseapp.com\",\n  projectId: \"frist-b073a\",\n  storageBucket: \"frist-b073a.appspot.com\",\n  messagingSenderId: \"580630150830\",\n  appId: \"1:580630150830:web:815ba6942a64909329b73f\",\n  measurementId: \"G-GH3D6EMB6L\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nfunction Timer({ user, onBack, groupId }) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(0);\n  const [points, setPoints] = useState(0);\n  const [lastUpdateTime, setLastUpdateTime] = useState(0);\n  const [members, setMembers] = useState([]);\n  const [showMembers, setShowMembers] = useState(false);\n  const [isCreator, setIsCreator] = useState(false);\n  const [loadingMembers, setLoadingMembers] = useState(true);\n  const [bannedMembers, setBannedMembers] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('ar');\n  const [notification, setNotification] = useState(null);\n  const [studySessions, setStudySessions] = useState([]);\n  const [activeTab, setActiveTab] = useState('timer');\n  const [sideMenuOpen, setSideMenuOpen] = useState(false);\n  const [inventory, setInventory] = useState([]);\n  const [activeEffects, setActiveEffects] = useState([]);\n  const [hoveredItem, setHoveredItem] = useState(null);\n\n  // Calculate user level with exponential growth\n  const calculateLevel = (points) => {\n    const base = 100;\n    const growthFactor = 1.15;\n    \n    let level = 1;\n    let requiredPoints = base;\n    let totalPointsNeeded = base;\n    \n    while (points >= totalPointsNeeded) {\n      level++;\n      requiredPoints = Math.floor(requiredPoints * growthFactor);\n      totalPointsNeeded += requiredPoints;\n    }\n    \n    const pointsForCurrentLevel = points - (totalPointsNeeded - requiredPoints);\n    \n    return {\n      currentLevel: level,\n      nextLevelPoints: requiredPoints,\n      progress: (pointsForCurrentLevel / requiredPoints) * 100,\n      pointsToNextLevel: requiredPoints - pointsForCurrentLevel\n    };\n  };\n\n  const { currentLevel, progress, pointsToNextLevel } = calculateLevel(points);\n\n  // نظام الشعارات\n  const getBadge = (level) => {\n    const badges = {\n      1: { name: \"البذرة\", icon: \"🌱\", color: \"var(--secondary-color)\", bgColor: \"rgba(16, 185, 129, 0.1)\" },\n      5: { name: \"المتدرب\", icon: \"📖\", color: \"var(--primary-color)\", bgColor: \"rgba(79, 70, 229, 0.1)\" },\n      10: { name: \"المجتهد\", icon: \"🎓\", color: \"var(--warning-color)\", bgColor: \"rgba(245, 158, 11, 0.1)\" },\n      20: { name: \"الخبير\", icon: \"🔍\", color: \"var(--accent-color)\", bgColor: \"rgba(239, 68, 68, 0.1)\" },\n      30: { name: \"العبقري\", icon: \"🧠\", color: \"var(--primary-dark)\", bgColor: \"rgba(67, 56, 202, 0.1)\" },\n      50: { name: \"الأسطورة\", icon: \"🏆\", color: \"var(--warning-dark)\", bgColor: \"rgba(217, 119, 6, 0.1)\" },\n      100: { name: \"رائد المعرفة\", icon: \"🚀\", color: \"var(--secondary-dark)\", bgColor: \"rgba(5, 150, 105, 0.1)\" }\n    };\n    \n    const eligibleLevels = Object.keys(badges)\n      .map(Number)\n      .filter(lvl => level >= lvl)\n      .sort((a, b) => b - a);\n    \n    return badges[eligibleLevels[0]] || badges[1];\n  };\n\n  const currentBadge = getBadge(currentLevel);\n\n  // نظام المتجر مع إضافة الوصف\n  const shopItems = [\n    { \n      id: \"boost\", \n      name: \"دفعة النجاح\", \n      description: \"يحقق ضعف النقاط لمدة 30 دقيقة\",\n      price: 400, \n      icon: \"⚡\", \n      effect: \"double_points\", \n      color: \"var(--warning-color)\",\n      bgColor: \"rgba(245, 158, 11, 0.1)\",\n      hoverEffect: \"glow\"\n    },\n    { \n      id: \"focus\", \n      name: \"معزز التركيز\", \n      description: \"يزيد سرعة تحصيل النقاط بنسبة 50% لمدة ساعة\",\n      price: 300, \n      icon: \"🧠\", \n      effect: \"speed_boost\", \n      color: \"var(--primary-color)\",\n      bgColor: \"rgba(79, 70, 229, 0.1)\",\n      hoverEffect: \"pulse\"\n    },\n    { \n      id: \"crown\", \n      name: \"التاج الذهبي\", \n      description: \"يظهر تاج ذهبي بجانب اسمك في لوحة المتصدرين\",\n      price: 600, \n      icon: \"👑\", \n      effect: \"golden_crown\", \n      color: \"var(--warning-dark)\",\n      bgColor: \"rgba(217, 119, 6, 0.1)\",\n      hoverEffect: \"float\"\n    },\n    { \n      id: \"shield\", \n      name: \"حافظة النقاط\", \n      description: \"يحمي نقاطك من الخسارة لمدة 24 ساعة\",\n      price: 350, \n      icon: \"🛡️\", \n      effect: \"points_shield\", \n      color: \"var(--secondary-color)\",\n      bgColor: \"rgba(16, 185, 129, 0.1)\",\n      hoverEffect: \"shake\"\n    }\n  ];\n\n  const purchaseItem = async (item) => {\n    if (points >= item.price) {\n      try {\n        await runTransaction(db, async (transaction) => {\n          const userDoc = await transaction.get(doc(db, \"users\", user.uid));\n          transaction.update(doc(db, \"users\", user.uid), {\n            points: userDoc.data().points - item.price,\n            inventory: arrayUnion(item.id)\n          });\n        });\n        showNotification(`🎉 تم شراء ${item.name}!`);\n        setInventory([...inventory, item.id]);\n      } catch (error) {\n        console.error(\"Error purchasing item:\", error);\n        showNotification(\"⚠️ حدث خطأ أثناء الشراء\");\n      }\n    } else {\n      showNotification(\"❌ نقاطك غير كافية!\");\n    }\n  };\n\n  // Toggle dark/light theme\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.documentElement.setAttribute('data-theme', newMode ? 'dark' : 'light');\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n    showNotification(newMode ? '🌙 تم تفعيل الوضع المظلم' : '☀️ تم تفعيل الوضع الفاتح');\n  };\n\n  // Change language\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    localStorage.setItem('language', lang);\n    showNotification(lang === 'ar' ? '🇸🇦 تم تغيير اللغة إلى العربية' : '🇬🇧 Language changed to English');\n  };\n\n  // Show notification\n  const showNotification = (message) => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Format time as HH:MM:SS\n  const formatTime = (seconds) => {\n    const hrs = Math.floor(seconds / 3600);\n    const mins = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Add study session to history\n  const addStudySession = (duration, pointsEarned) => {\n    const newSession = {\n      date: new Date(),\n      duration,\n      pointsEarned\n    };\n    setStudySessions(prev => [newSession, ...prev].slice(0, 10));\n  };\n\n  // Update points in Firestore\n  const updatePoints = async (newPoints) => {\n    try {\n      const groupDoc = await getDoc(doc(db, \"studyGroups\", groupId));\n      if (groupDoc.exists() && !groupDoc.data().bannedMembers?.includes(user.uid)) {\n        await updateDoc(doc(db, \"studyGroups\", groupId), {\n          [`userPoints.${user.uid}`]: newPoints\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating points:\", error);\n    }\n  };\n\n  // Fetch group data\n  useEffect(() => {\n    const fetchGroupData = async () => {\n      try {\n        setLoadingMembers(true);\n        const groupDoc = await getDoc(doc(db, \"studyGroups\", groupId));\n        if (groupDoc.exists()) {\n          const groupData = groupDoc.data();\n          setIsCreator(groupData.creator === user.uid);\n          setBannedMembers(groupData.bannedMembers || []);\n          \n          const userPoints = groupData.userPoints?.[user.uid] || 0;\n          setPoints(userPoints);\n          \n          if (groupData.members) {\n            const membersPromises = groupData.members.map(async (uid) => {\n              const userDoc = await getDoc(doc(db, \"users\", uid));\n              if (userDoc.exists()) {\n                return {\n                  uid,\n                  name: userDoc.data().displayName,\n                  photoURL: userDoc.data().photoURL,\n                  points: groupData.userPoints?.[uid] || 0\n                };\n              }\n              return null;\n            });\n            \n            const membersList = (await Promise.all(membersPromises)).filter(Boolean);\n            membersList.sort((a, b) => b.points - a.points);\n            setMembers(membersList);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching group data:\", error);\n      } finally {\n        setLoadingMembers(false);\n      }\n    };\n    \n    fetchGroupData();\n    \n    const unsubscribe = onSnapshot(doc(db, \"studyGroups\", groupId), fetchGroupData);\n    return () => unsubscribe();\n  }, [groupId, user.uid]);\n\n  // Simulate online users\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomOnline = members\n        .filter(() => Math.random() > 0.7)\n        .map(member => member.uid);\n      setOnlineUsers(randomOnline);\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [members]);\n\n  // Timer logic\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Points and level up logic\n  useEffect(() => {\n    if (isRunning && time > 0 && time % 30 === 0 && time !== lastUpdateTime) {\n      const newPoints = points + 1;\n      setPoints(newPoints);\n      updatePoints(newPoints);\n      setLastUpdateTime(time);\n      \n      // Check for level up\n      const newLevelData = calculateLevel(newPoints);\n      if (newLevelData.currentLevel > currentLevel) {\n        showNotification(`🎉 تقدمت للمستوى ${newLevelData.currentLevel}!`);\n      }\n    }\n  }, [time, isRunning]);\n\n  // Load theme and language preferences\n  useEffect(() => {\n    const savedMode = JSON.parse(localStorage.getItem('darkMode'));\n    if (savedMode !== null) {\n      setDarkMode(savedMode);\n      document.documentElement.setAttribute('data-theme', savedMode ? 'dark' : 'light');\n    }\n\n    const savedLang = localStorage.getItem('language') || 'ar';\n    setLanguage(savedLang);\n  }, []);\n\n  // Remove member from group\n  const removeMember = async (memberId) => {\n    if (window.confirm(`هل أنت متأكد من حذف هذا العضو من المجموعة؟`)) {\n      try {\n        await runTransaction(db, async (transaction) => {\n          const groupDoc = await transaction.get(doc(db, \"studyGroups\", groupId));\n          if (!groupDoc.exists()) throw new Error(\"المجموعة غير موجودة\");\n          \n          const groupData = groupDoc.data();\n          const updatedMembers = groupData.members.filter(m => m !== memberId);\n          const updatedUserPoints = {...groupData.userPoints};\n          delete updatedUserPoints[memberId];\n          \n          transaction.update(doc(db, \"studyGroups\", groupId), {\n            members: updatedMembers,\n            userPoints: updatedUserPoints\n          });\n        });\n        showNotification(\"✅ تم حذف العضو بنجاح\");\n      } catch (error) {\n        console.error(\"Error removing member:\", error);\n        showNotification(\"❌ حدث خطأ أثناء حذف العضو\");\n      }\n    }\n  };\n\n  // Ban/unban member\n  const toggleBanMember = async (memberId) => {\n    if (window.confirm(`هل أنت متأكد من ${bannedMembers.includes(memberId) ? 'إلغاء حظر' : 'حظر'} هذا العضو؟`)) {\n      try {\n        await runTransaction(db, async (transaction) => {\n          const groupDoc = await transaction.get(doc(db, \"studyGroups\", groupId));\n          if (!groupDoc.exists()) throw new Error(\"المجموعة غير موجودة\");\n          \n          const groupData = groupDoc.data();\n          const currentBanned = groupData.bannedMembers || [];\n          const isBanned = currentBanned.includes(memberId);\n          \n          const updatedBanned = isBanned \n            ? currentBanned.filter(id => id !== memberId)\n            : [...currentBanned, memberId];\n          \n          const updates = {\n            bannedMembers: updatedBanned,\n            banHistory: arrayUnion({\n              memberId: memberId,\n              bannedBy: user.uid,\n              timestamp: new Date(),\n              action: isBanned ? \"unban\" : \"ban\"\n            })\n          };\n          \n          if (!isBanned) {\n            updates[`userPoints.${memberId}`] = 0;\n          }\n          \n          transaction.update(doc(db, \"studyGroups\", groupId), updates);\n        });\n        \n        showNotification(`✅ تم ${bannedMembers.includes(memberId) ? 'إلغاء حظر' : 'حظر'} العضو بنجاح`);\n      } catch (error) {\n        console.error(\"Error updating banned members:\", error);\n        showNotification(\"❌ حدث خطأ أثناء تحديث قائمة الحظر\");\n      }\n    }\n  };\n\n  // Reset timer and save session\n  const resetTimer = () => {\n    if (time > 0) {\n      addStudySession(time, Math.floor(time / 30));\n      showNotification(`📊 تم حفظ جلسة دراسة مدتها ${formatTime(time)}`);\n    }\n    setIsRunning(false);\n    setTime(0);\n  };\n\n  // Apply active effects\n  const applyEffect = (effect) => {\n    switch(effect) {\n      case 'glow':\n        return { boxShadow: '0 0 15px rgba(245, 158, 11, 0.7)' };\n      case 'pulse':\n        return { animation: 'pulse 1.5s infinite' };\n      case 'float':\n        return { transform: 'translateY(-5px)', transition: 'all 0.3s ease' };\n      case 'shake':\n        return { animation: 'shake 0.5s infinite' };\n      default:\n        return {};\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Top Navigation بدون صورة المستخدم */}\n      <div className=\"top-tabs\">\n        <button \n          className=\"menu-toggle\" \n          onClick={() => setSideMenuOpen(!sideMenuOpen)}\n          aria-label=\"قائمة\"\n        >\n          ☰\n        </button>\n        \n        <div className=\"main-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'timer' ? 'active' : ''}`}\n            onClick={() => setActiveTab('timer')}\n          >\n            <span className=\"tab-icon\">⏱️</span>\n            <span className=\"tab-label\">المؤقت</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'profile' ? 'active' : ''}`}\n            onClick={() => setActiveTab('profile')}\n          >\n            <span className=\"tab-icon\">👤</span>\n            <span className=\"tab-label\">الملف الشخصي</span>\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'shop' ? 'active' : ''}`}\n            onClick={() => setActiveTab('shop')}\n          >\n            <span className=\"tab-icon\">🛒</span>\n            <span className=\"tab-label\">المتجر</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Side Menu */}\n      <div className={`side-menu ${sideMenuOpen ? 'open' : ''}`}>\n        <button \n          className=\"close-menu\" \n          onClick={() => setSideMenuOpen(false)}\n          aria-label=\"إغلاق القائمة\"\n        >\n          ✕\n        </button>\n        \n        <div className=\"menu-section\">\n          <h3>مجموعاتك</h3>\n          <button \n            onClick={onBack} \n            className=\"back-button\"\n          >\n            ← العودة للمجموعات\n          </button>\n        </div>\n        \n        <div className=\"menu-section\">\n          <h3>إنجازاتك</h3>\n          <div \n            className=\"badge-display\" \n            style={{ \n              backgroundColor: currentBadge.bgColor,\n              borderLeft: `4px solid ${currentBadge.color}`\n            }}\n          >\n            <span \n              className=\"badge-icon\"\n              style={{ color: currentBadge.color }}\n            >\n              {currentBadge.icon}\n            </span>\n            <div className=\"badge-info\">\n              <span className=\"badge-name\" style={{ color: currentBadge.color }}>\n                {currentBadge.name}\n              </span>\n              <span className=\"badge-level\" style={{ color: currentBadge.color }}>\n                المستوى {currentLevel}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"menu-section\">\n          <h3>الإعدادات</h3>\n          <div className=\"settings-option\">\n            <span>الوضع المظلم:</span>\n            <label className=\"switch\">\n              <input \n                type=\"checkbox\" \n                checked={darkMode} \n                onChange={toggleDarkMode}\n              />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          \n          <div className=\"settings-option\">\n            <span>اللغة:</span>\n            <select \n              value={language} \n              onChange={(e) => changeLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              <option value=\"ar\">العربية</option>\n              <option value=\"en\">English</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {activeTab === 'timer' && (\n          <div className=\"timer-container\">\n            <div className=\"time-display\">\n              <h2>وقت المذاكرة</h2>\n              <div className=\"time\">{formatTime(time)}</div>\n            </div>\n            \n            <div className=\"stats-display\">\n              <div className=\"stat-box\">\n                <span className=\"stat-label\">النقاط</span>\n                <span className=\"stat-value\">{points}</span>\n              </div>\n              \n              <div className=\"stat-box\">\n                <span className=\"stat-label\">المستوى</span>\n                <span className=\"stat-value\">{currentLevel}</span>\n              </div>\n            </div>\n            \n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>التقدم للمستوى {currentLevel + 1}</span>\n                <span>{Math.round(progress)}%</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ width: `${progress}%` }}\n                ></div>\n              </div>\n              <div className=\"progress-text\">\n                {pointsToNextLevel} نقطة متبقية للوصول للمستوى التالي\n              </div>\n            </div>\n            \n            <div className=\"timer-controls\">\n              <button \n                onClick={() => setIsRunning(!isRunning)}\n                className={`control-button ${isRunning ? 'pause-button' : 'start-button'}`}\n                disabled={bannedMembers.includes(user.uid)}\n              >\n                {isRunning ? ' إيقاف' : ' بدء'}\n              </button>\n              \n              <button \n                onClick={resetTimer}\n                className=\"control-button reset-button\"\n              >\n                 إعادة تعيين\n              </button>\n              \n              <button\n                onClick={() => setShowMembers(!showMembers)}\n                className=\"control-button members-button\"\n              >\n                {showMembers ? ' إخفاء الأعضاء' : ' عرض الأعضاء'}\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {activeTab === 'profile' && (\n          <div className=\"profile-container\">\n            <div className=\"profile-header\">\n              <img \n                src={user.photoURL} \n                alt=\"صورة الملف الشخصي\" \n                className=\"profile-avatar\"\n              />\n              <h2>{user.displayName}</h2>\n              <p className=\"user-level\">المستوى {currentLevel}</p>\n            </div>\n            \n            <div className=\"profile-stats\">\n              <div className=\"stat-row\">\n                <span className=\"stat-label\">إجمالي النقاط:</span>\n                <span className=\"stat-value\">{points}</span>\n              </div>\n              \n              <div className=\"stat-row\">\n                <span className=\"stat-label\">إجمالي وقت الدراسة:</span>\n                <span className=\"stat-value\">{Math.floor(time / 3600)} ساعة</span>\n              </div>\n              \n              <div className=\"stat-row\">\n                <span className=\"stat-label\">النقاط للوصول للمستوى التالي:</span>\n                <span className=\"stat-value\">{pointsToNextLevel}</span>\n              </div>\n            </div>\n            \n            {studySessions.length > 0 && (\n              <div className=\"sessions-history\">\n                <h3>آخر جلسات الدراسة</h3>\n                <div className=\"sessions-list\">\n                  {studySessions.map((session, index) => (\n                    <div key={index} className=\"session-item\">\n                      <span className=\"session-date\">\n                        {new Date(session.date).toLocaleDateString()}\n                      </span>\n                      <span className=\"session-duration\">\n                        {formatTime(session.duration)}\n                      </span>\n                      <span className=\"session-points\">\n                        +{session.pointsEarned} نقطة\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {activeTab === 'shop' && (\n          <div className=\"shop-container\">\n            <h2>متجر النقاط</h2>\n            <div className=\"balance-display\">\n              <span>رصيدك الحالي:</span>\n              <span className=\"points-balance\">{points} نقطة</span>\n            </div>\n            <div className=\"shop-items\">\n              {shopItems.map(item => (\n                <div \n                  key={item.id} \n                  className={`shop-item ${hoveredItem === item.id ? 'hovered' : ''}`}\n                  style={{ \n                    borderColor: item.color,\n                    backgroundColor: item.bgColor,\n                    ...(hoveredItem === item.id ? applyEffect(item.hoverEffect) : {})\n                  }}\n                  onMouseEnter={() => setHoveredItem(item.id)}\n                  onMouseLeave={() => setHoveredItem(null)}\n                >\n                  <div \n                    className=\"item-icon\" \n                    style={{ color: item.color }}\n                  >\n                    {item.icon}\n                  </div>\n                  <h3>{item.name}</h3>\n                  <p className=\"item-description\">{item.description}</p>\n                  <p className=\"item-price\" style={{ color: item.color }}>\n                    {item.price} نقطة\n                  </p>\n                  <button \n                    onClick={() => purchaseItem(item)}\n                    disabled={points < item.price}\n                    className={points < item.price ? 'disabled' : ''}\n                    style={{ backgroundColor: item.color }}\n                  >\n                    {points < item.price ? 'نقاط غير كافية' : 'شراء'}\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Members Sidebar */}\n      {showMembers && (\n        <div className=\"members-sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>ترتيب المجموعة</h3>\n            <button \n              className=\"close-sidebar\" \n              onClick={() => setShowMembers(false)}\n            >\n              ✕\n            </button>\n          </div>\n          \n          {loadingMembers ? (\n            <div className=\"loading-container\">\n              <div className=\"spinner\"></div>\n              <p>جاري تحميل الأعضاء...</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"leaderboard\">\n                {members\n                  .filter(member => !bannedMembers.includes(member.uid))\n                  .map((member, index) => (\n                    <div \n                      key={member.uid} \n                      className={`member-item ${member.uid === user.uid ? 'current-user' : ''}`}\n                    >\n                      <span className=\"member-rank\">{index + 1}</span>\n                      \n                      <div className=\"avatar-container\">\n                        <img \n                          src={member.photoURL} \n                          alt={member.name} \n                          className=\"member-avatar\"\n                        />\n                        {onlineUsers.includes(member.uid) && <div className=\"online-status\"></div>}\n                      </div>\n                      \n                      <div className=\"member-info\">\n                        <span className=\"member-name\">{member.name}</span>\n                        <span className=\"member-points\">{member.points} نقطة</span>\n                      </div>\n                      \n                      {isCreator && member.uid !== user.uid && (\n                        <div className=\"member-actions\">\n                          <button \n                            onClick={() => toggleBanMember(member.uid)}\n                            className=\"ban-button\"\n                            title={bannedMembers.includes(member.uid) ? \"إلغاء الحظر\" : \"حظر العضو\"}\n                          >\n                            {bannedMembers.includes(member.uid) ? \"🚫\" : \"⛔\"}\n                          </button>\n                          <button \n                            onClick={() => removeMember(member.uid)}\n                            className=\"remove-button\"\n                            title=\"حذف العضو\"\n                          >\n                            ✕\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ))\n                }\n              </div>\n              \n              {bannedMembers.length > 0 && (\n                <div className=\"banned-section\">\n                  <h4>الأعضاء المحظورين</h4>\n                  {members\n                    .filter(member => bannedMembers.includes(member.uid))\n                    .map((member) => (\n                      <div key={member.uid} className=\"member-item banned-member\">\n                        <div className=\"avatar-container\">\n                          <img \n                            src={member.photoURL} \n                            alt={member.name} \n                            className=\"member-avatar\"\n                          />\n                        </div>\n                        \n                        <div className=\"member-info\">\n                          <span className=\"member-name\">{member.name}</span>\n                          <span className=\"banned-label\">محظور</span>\n                        </div>\n                        \n                        {isCreator && (\n                          <button \n                            onClick={() => toggleBanMember(member.uid)}\n                            className=\"unban-button\"\n                          >\n                            إلغاء الحظر\n                          </button>\n                        )}\n                      </div>\n                    ))\n                  }\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Notification */}\n      {notification && (\n        <div className=\"notification\">\n          {notification}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [groupName, setGroupName] = useState('');\n  const [groups, setGroups] = useState([]);\n  const [loadingGroups, setLoadingGroups] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [showJoinModal, setShowJoinModal] = useState(false);\n  const [joinCode, setJoinCode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('ar');\n  const [notification, setNotification] = useState(null);\n  const [hoveredGroup, setHoveredGroup] = useState(null);\n\n  // Show notification\n  const showNotification = (message) => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Toggle dark/light theme\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.documentElement.setAttribute('data-theme', newMode ? 'dark' : 'light');\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n    showNotification(newMode ? '🌙 تم تفعيل الوضع المظلم' : '☀️ تم تفعيل الوضع الفاتح');\n  };\n\n  // Load theme preference\n  useEffect(() => {\n    const savedMode = JSON.parse(localStorage.getItem('darkMode'));\n    if (savedMode !== null) {\n      setDarkMode(savedMode);\n      document.documentElement.setAttribute('data-theme', savedMode ? 'dark' : 'light');\n    }\n  }, []);\n\n  // Auth state listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      if (currentUser) {\n        await setDoc(doc(db, \"users\", currentUser.uid), {\n          displayName: currentUser.displayName,\n          photoURL: currentUser.photoURL,\n          email: currentUser.email,\n          lastLogin: new Date()\n        }, { merge: true });\n        \n        setUser(currentUser);\n        await fetchUserGroups(currentUser.uid);\n      } else {\n        setUser(null);\n        setGroups([]);\n        setSelectedGroup(null);\n      }\n    });\n    \n    return () => unsubscribe();\n  }, []);\n\n  // Fetch user's groups\n  const fetchUserGroups = async (userId) => {\n    setLoadingGroups(true);\n    try {\n      const q = query(\n        collection(db, \"studyGroups\"),\n        where(\"members\", \"array-contains\", userId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      const groupsArray = [];\n      \n      const groupsPromises = querySnapshot.docs.map(async (docSnap) => {\n        const groupData = docSnap.data();\n        \n        if (groupData.bannedMembers?.includes(userId)) {\n          return null;\n        }\n        \n        const creatorDoc = await getDoc(doc(db, \"users\", groupData.creator));\n        const creatorName = creatorDoc.exists() ? creatorDoc.data().displayName : \"مستخدم غير معروف\";\n        \n        return { \n          id: docSnap.id, \n          ...groupData,\n          creatorName,\n          code: docSnap.id.slice(0, 6).toUpperCase(),\n          isCreator: groupData.creator === userId\n        };\n      });\n      \n      const groups = (await Promise.all(groupsPromises)).filter(Boolean);\n      setGroups(groups);\n      \n      if (selectedGroup && !groups.some(g => g.id === selectedGroup)) {\n        setSelectedGroup(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user groups:\", error);\n      showNotification(\"❌ حدث خطأ أثناء جلب المجموعات\");\n    } finally {\n      setLoadingGroups(false);\n    }\n  };\n\n  // Google login\n  const handleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      showNotification(`🎉 مرحباً ${result.user.displayName}!`);\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n      showNotification(\"❌ حدث خطأ أثناء تسجيل الدخول\");\n    }\n  };\n\n  // Logout\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      showNotification(\"✅ تم تسجيل الخروج بنجاح\");\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n\n  // Create new group\n  const addStudyGroup = async () => {\n    if (!groupName.trim()) {\n      showNotification(\"⚠️ الرجاء إدخال اسم المجموعة\");\n      return;\n    }\n    \n    try {\n      const newGroup = {\n        name: groupName.trim(),\n        createdAt: new Date(),\n        creator: user.uid,\n        members: [user.uid],\n        userPoints: { [user.uid]: 0 },\n        bannedMembers: []\n      };\n      \n      await addDoc(collection(db, \"studyGroups\"), newGroup);\n      setGroupName('');\n      showNotification(`🎉 تم إنشاء مجموعة \"${groupName.trim()}\" بنجاح`);\n      await fetchUserGroups(user.uid);\n    } catch (error) {\n      console.error(\"Error adding group:\", error);\n      showNotification(\"❌ حدث خطأ أثناء إنشاء المجموعة\");\n    }\n  };\n\n  // Delete group\n  const deleteGroup = async (groupId) => {\n    if (window.confirm(\"⚠️ هل أنت متأكد من حذف هذه المجموعة؟ سيتم حذف جميع بياناتها نهائياً\")) {\n      try {\n        const groupItem = document.getElementById(`group-${groupId}`);\n        if (groupItem) {\n          groupItem.style.transform = 'scale(0.9)';\n          groupItem.style.opacity = '0.5';\n          groupItem.style.transition = 'all 0.3s ease';\n          groupItem.style.animation = 'shake 0.5s';\n          \n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n        \n        await deleteDoc(doc(db, \"studyGroups\", groupId));\n        showNotification(\"✅ تم حذف المجموعة بنجاح\");\n        await fetchUserGroups(user.uid);\n      } catch (error) {\n        console.error(\"Error deleting group:\", error);\n        showNotification(\"❌ حدث خطأ أثناء حذف المجموعة\");\n      }\n    }\n  };\n\n  // Join group by code\n  const joinGroupByCode = async () => {\n    if (!joinCode.trim()) {\n      showNotification(\"⚠️ الرجاء إدخال كود المجموعة\");\n      return;\n    }\n    \n    try {\n      const allGroupsQuery = collection(db, \"studyGroups\");\n      const allGroupsSnapshot = await getDocs(allGroupsQuery);\n      \n      let groupToJoin = null;\n      allGroupsSnapshot.forEach(doc => {\n        const groupCode = doc.id.slice(0, 6).toUpperCase();\n        if (groupCode === joinCode.toUpperCase().trim()) {\n          groupToJoin = { \n            id: doc.id, \n            ...doc.data(),\n            code: groupCode\n          };\n        }\n      });\n      \n      if (groupToJoin) {\n        if (groupToJoin.bannedMembers?.includes(user.uid)) {\n          showNotification(`🚫 أنت محظور من هذه المجموعة (${groupToJoin.name})`);\n          return;\n        }\n        \n        if (groupToJoin.members && groupToJoin.members.includes(user.uid)) {\n          setSelectedGroup(groupToJoin.id);\n          setShowJoinModal(false);\n          setJoinCode('');\n          return;\n        }\n        \n        await updateDoc(doc(db, \"studyGroups\", groupToJoin.id), {\n          [`userPoints.${user.uid}`]: 0,\n          members: [...(groupToJoin.members || []), user.uid]\n        });\n        \n        setSelectedGroup(groupToJoin.id);\n        setShowJoinModal(false);\n        setJoinCode('');\n        showNotification(`🎉 تم الانضمام إلى مجموعة \"${groupToJoin.name}\"`);\n        await fetchUserGroups(user.uid);\n      } else {\n        showNotification(\"❌ لا توجد مجموعة بهذا الكود\");\n      }\n    } catch (error) {\n      console.error(\"Error joining group:\", error);\n      showNotification(\"❌ حدث خطأ أثناء الانضمام للمجموعة\");\n    }\n  };\n\n  // Handle join group\n  const handleJoinGroup = (groupId) => {\n    setSelectedGroup(groupId);\n  };\n\n  // Back to groups list\n  const handleBackToGroups = () => {\n    setSelectedGroup(null);\n  };\n\n  if (selectedGroup && user) {\n    return (\n      <div className=\"App\">\n        <Timer \n          user={user} \n          onBack={handleBackToGroups}\n          groupId={selectedGroup}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <button \n        onClick={toggleDarkMode} \n        className=\"theme-toggle\"\n        aria-label={darkMode ? 'تفعيل الوضع الفاتح' : 'تفعيل الوضع الغامق'}\n      >\n        {darkMode ? '☀️' : '🌙'}\n      </button>\n      \n      <header className=\"App-header\">\n        <div className=\"login-container\">\n          {!user ? (\n            <div className=\"welcome-screen\">\n              <h1>مجموعات الدراسة التعاونية</h1>\n              <p>انضم إلى مجتمع المذاكرة مع الأصدقاء وحقق أهدافك التعليمية</p>\n              <button \n                className=\"login-button\" \n                onClick={handleLogin}\n              >\n                <span>تسجيل الدخول باستخدام Google</span>\n              </button>\n            </div>\n          ) : (\n            <div className=\"user-welcome\">\n              <div className=\"user-info\">\n                <img \n                  src={user.photoURL} \n                  alt=\"صورة المستخدم\" \n                  className=\"user-avatar\"\n                />\n                <div className=\"user-details\">\n                  <h2>مرحباً {user.displayName}!</h2>\n                  <button \n                    className=\"logout-button\" \n                    onClick={handleLogout}\n                  >\n                    تسجيل الخروج\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {user && (\n          <div className=\"group-management\">\n            <div className=\"group-creation\">\n              <h2>إنشاء مجموعة جديدة</h2>\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  value={groupName}\n                  onChange={(e) => setGroupName(e.target.value)}\n                  placeholder=\"أدخل اسم المجموعة\"\n                  onKeyPress={(e) => e.key === 'Enter' && addStudyGroup()}\n                />\n                <button \n                  className=\"create-button\" \n                  onClick={addStudyGroup}\n                >\n                  إنشاء\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"join-group\">\n              <h2>الانضمام إلى مجموعة</h2>\n              <button \n                className=\"join-button\"\n                onClick={() => setShowJoinModal(true)}\n              >\n                الانضمام بمجموعة موجودة\n              </button>\n            </div>\n          </div>\n        )}\n\n        {user && (\n          <div className=\"study-groups\">\n            <h2>مجموعاتك الدراسية</h2>\n            \n            {loadingGroups ? (\n              <div className=\"loading-container\">\n                <div className=\"spinner\"></div>\n                <p>جاري تحميل المجموعات...</p>\n              </div>\n            ) : groups.length === 0 ? (\n              <div className=\"empty-state\">\n                <div className=\"empty-icon\">📚</div>\n                <p>لا توجد مجموعات متاحة حالياً</p>\n                <button \n                  className=\"create-button\"\n                  onClick={() => document.querySelector('.group-creation input').focus()}\n                >\n                  إنشاء مجموعة جديدة\n                </button>\n              </div>\n            ) : (\n              <div className=\"groups-grid\">\n                {groups.map((group) => (\n                  <div \n                    key={group.id} \n                    id={`group-${group.id}`} \n                    className={`group-card ${hoveredGroup === group.id ? 'hovered' : ''}`}\n                    onMouseEnter={() => setHoveredGroup(group.id)}\n                    onMouseLeave={() => setHoveredGroup(null)}\n                  >\n                    <div className=\"group-content\">\n                      <h3 className=\"group-name\">{group.name}</h3>\n                      <p className=\"group-meta\">\n                        <span className=\"group-creator\">المنشئ: {group.creatorName}</span>\n                        <span className=\"group-code\">كود: {group.code}</span>\n                      </p>\n                      {group.isCreator && <span className=\"creator-badge\">أنت المنشئ</span>}\n                    </div>\n                    \n                    <div className=\"group-actions\">\n                      <button \n                        onClick={() => handleJoinGroup(group.id)} \n                        className=\"join-button\"\n                      >\n                        دخول المجموعة\n                      </button>\n                      \n                      {group.isCreator && (\n                        <button \n                          onClick={() => deleteGroup(group.id)} \n                          className=\"delete-button\"\n                        >\n                          حذف المجموعة\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {showJoinModal && (\n          <div className=\"modal-overlay\" onClick={() => setShowJoinModal(false)}>\n            <div \n              className=\"modal-content\" \n              onClick={e => e.stopPropagation()}\n            >\n              <button \n                className=\"close-button\" \n                onClick={() => setShowJoinModal(false)}\n              >\n                &times;\n              </button>\n              \n              <h2>الانضمام إلى مجموعة</h2>\n              <p>أدخل كود المجموعة المكون من 6 أحرف</p>\n              \n              <input\n                type=\"text\"\n                value={joinCode}\n                onChange={(e) => setJoinCode(e.target.value)}\n                placeholder=\"أدخل كود المجموعة\"\n                maxLength={6}\n                className=\"join-input\"\n              />\n              \n              <div className=\"modal-actions\">\n                <button \n                  onClick={joinGroupByCode} \n                  className=\"confirm-button\"\n                >\n                  تأكيد الانضمام\n                </button>\n                <button \n                  onClick={() => setShowJoinModal(false)} \n                  className=\"cancel-button\"\n                >\n                  إلغاء\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {notification && (\n          <div className=\"notification\">\n            {notification}\n          </div>\n        )}\n\n        <footer className=\"app-footer\">\n          <p>تم تطويره بواسطة محمد أبو طبيخ © {new Date().getFullYear()}</p>\n        </footer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    }).catch((error) => {\n      console.log('Error importing web-vitals:', error);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom'; // تغيير من 'react-dom/client' إلى 'react-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// تغيير طريقة التصيير لتتوافق مع React 17\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();"],"sourceRoot":""}