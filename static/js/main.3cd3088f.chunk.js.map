{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","Timer","_ref","user","onBack","groupId","isRunning","setIsRunning","useState","time","setTime","points","setPoints","lastUpdateTime","setLastUpdateTime","members","setMembers","showMembers","setShowMembers","isCreator","setIsCreator","loadingMembers","setLoadingMembers","bannedMembers","setBannedMembers","onlineUsers","setOnlineUsers","showProfileMenu","setShowProfileMenu","showProfileModal","setShowProfileModal","showSettingsModal","setShowSettingsModal","darkMode","setDarkMode","language","setLanguage","notification","setNotification","studySessions","setStudySessions","calculateLevel","level","requiredPoints","totalPointsNeeded","Math","floor","pointsForCurrentLevel","currentLevel","nextLevelPoints","progress","pointsToNextLevel","showNotification","message","setTimeout","formatTime","seconds","hrs","mins","secs","concat","toString","padStart","useEffect","fetchGroupData","async","groupDoc","getDoc","doc","exists","_groupData$userPoints","groupData","data","creator","uid","userPoints","membersPromises","map","userDoc","_groupData$userPoints2","name","displayName","photoURL","membersList","Promise","all","filter","Boolean","sort","a","b","error","console","unsubscribe","onSnapshot","interval","setInterval","randomOnline","random","member","clearInterval","prev","newPoints","_groupDoc$data$banned","includes","updateDoc","updatePoints","newLevelData","savedMode","JSON","parse","localStorage","getItem","document","documentElement","setAttribute","savedLang","toggleBanMember","window","confirm","memberId","runTransaction","transaction","get","Error","currentBanned","isBanned","updates","id","banHistory","arrayUnion","bannedBy","timestamp","Date","action","update","_jsxs","className","children","_jsx","onClick","src","alt","round","style","width","disabled","resetTimer","addStudySession","duration","pointsEarned","newSession","date","slice","_Fragment","index","title","updatedMembers","m","updatedUserPoints","_objectSpread","removeMember","length","e","stopPropagation","session","toLocaleDateString","type","checked","onChange","toggleDarkMode","newMode","setItem","stringify","value","changeLanguage","lang","target","signOut","App","setUser","groupName","setGroupName","groups","setGroups","loadingGroups","setLoadingGroups","selectedGroup","setSelectedGroup","showJoinModal","setShowJoinModal","joinCode","setJoinCode","onAuthStateChanged","currentUser","setDoc","email","lastLogin","merge","fetchUserGroups","q","query","collection","where","userId","querySnapshot","getDocs","groupsPromises","docs","_groupData$bannedMemb","docSnap","creatorDoc","creatorName","code","toUpperCase","some","g","addStudyGroup","trim","newGroup","createdAt","addDoc","handleBackToGroups","provider","GoogleAuthProvider","result","signInWithPopup","placeholder","onKeyPress","key","querySelector","focus","group","handleJoinGroup","groupItem","getElementById","transform","opacity","transition","animation","resolve","deleteDoc","deleteGroup","maxLength","allGroupsQuery","allGroupsSnapshot","groupToJoin","forEach","groupCode","_groupToJoin$bannedMe","getFullYear","location","hostname","match","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","log","ReactDOM","render","React","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cd3088f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, deleteDoc, doc, updateDoc, getDoc, query, where, setDoc, onSnapshot, runTransaction, arrayUnion } from 'firebase/firestore';\nimport './App.css';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDoLr3Dnb5YbCnUtTexaz84YOH5h8Ukfoc\",\n  authDomain: \"frist-b073a.firebaseapp.com\",\n  projectId: \"frist-b073a\",\n  storageBucket: \"frist-b073a.appspot.com\",\n  messagingSenderId: \"580630150830\",\n  appId: \"1:580630150830:web:815ba6942a64909329b73f\",\n  measurementId: \"G-GH3D6EMB6L\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nfunction Timer({ user, onBack, groupId }) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(0);\n  const [points, setPoints] = useState(0);\n  const [lastUpdateTime, setLastUpdateTime] = useState(0);\n  const [members, setMembers] = useState([]);\n  const [showMembers, setShowMembers] = useState(false);\n  const [isCreator, setIsCreator] = useState(false);\n  const [loadingMembers, setLoadingMembers] = useState(true);\n  const [bannedMembers, setBannedMembers] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('ar');\n  const [notification, setNotification] = useState(null);\n  const [studySessions, setStudySessions] = useState([]);\n\n  // Calculate user level with exponential growth\n  const calculateLevel = (points) => {\n    const base = 100;\n    const growthFactor = 1.15;\n    \n    let level = 1;\n    let requiredPoints = base;\n    let totalPointsNeeded = base;\n    \n    while (points >= totalPointsNeeded) {\n      level++;\n      requiredPoints = Math.floor(requiredPoints * growthFactor);\n      totalPointsNeeded += requiredPoints;\n    }\n    \n    const pointsForCurrentLevel = points - (totalPointsNeeded - requiredPoints);\n    \n    return {\n      currentLevel: level,\n      nextLevelPoints: requiredPoints,\n      progress: (pointsForCurrentLevel / requiredPoints) * 100,\n      pointsToNextLevel: requiredPoints - pointsForCurrentLevel\n    };\n  };\n\n  const { currentLevel, progress, pointsToNextLevel } = calculateLevel(points);\n\n  // Toggle dark/light theme\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.documentElement.setAttribute('data-theme', newMode ? 'dark' : 'light');\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n    showNotification(newMode ? 'تم تفعيل الوضع المظلم' : 'تم تفعيل الوضع الفاتح');\n  };\n\n  // Change language\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    localStorage.setItem('language', lang);\n    showNotification(lang === 'ar' ? 'تم تغيير اللغة إلى العربية' : 'Language changed to English');\n  };\n\n  // Show notification\n  const showNotification = (message) => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Format time as HH:MM:SS\n  const formatTime = (seconds) => {\n    const hrs = Math.floor(seconds / 3600);\n    const mins = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Add study session to history\n  const addStudySession = (duration, pointsEarned) => {\n    const newSession = {\n      date: new Date(),\n      duration,\n      pointsEarned\n    };\n    setStudySessions(prev => [newSession, ...prev].slice(0, 10));\n  };\n\n  // Update points in Firestore\n  const updatePoints = async (newPoints) => {\n    try {\n      const groupDoc = await getDoc(doc(db, \"studyGroups\", groupId));\n      if (groupDoc.exists() && !groupDoc.data().bannedMembers?.includes(user.uid)) {\n        await updateDoc(doc(db, \"studyGroups\", groupId), {\n          [`userPoints.${user.uid}`]: newPoints\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating points:\", error);\n    }\n  };\n\n  // Fetch group data\n  useEffect(() => {\n    const fetchGroupData = async () => {\n      try {\n        setLoadingMembers(true);\n        const groupDoc = await getDoc(doc(db, \"studyGroups\", groupId));\n        if (groupDoc.exists()) {\n          const groupData = groupDoc.data();\n          setIsCreator(groupData.creator === user.uid);\n          setBannedMembers(groupData.bannedMembers || []);\n          \n          const userPoints = groupData.userPoints?.[user.uid] || 0;\n          setPoints(userPoints);\n          \n          if (groupData.members) {\n            const membersPromises = groupData.members.map(async (uid) => {\n              const userDoc = await getDoc(doc(db, \"users\", uid));\n              if (userDoc.exists()) {\n                return {\n                  uid,\n                  name: userDoc.data().displayName,\n                  photoURL: userDoc.data().photoURL,\n                  points: groupData.userPoints?.[uid] || 0\n                };\n              }\n              return null;\n            });\n            \n            const membersList = (await Promise.all(membersPromises)).filter(Boolean);\n            membersList.sort((a, b) => b.points - a.points);\n            setMembers(membersList);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching group data:\", error);\n      } finally {\n        setLoadingMembers(false);\n      }\n    };\n    \n    fetchGroupData();\n    \n    const unsubscribe = onSnapshot(doc(db, \"studyGroups\", groupId), fetchGroupData);\n    return () => unsubscribe();\n  }, [groupId, user.uid]);\n\n  // Simulate online users\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const randomOnline = members\n        .filter(() => Math.random() > 0.7)\n        .map(member => member.uid);\n      setOnlineUsers(randomOnline);\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [members]);\n\n  // Timer logic\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  // Points and level up logic\n  useEffect(() => {\n    if (isRunning && time > 0 && time % 30 === 0 && time !== lastUpdateTime) {\n      const newPoints = points + 1;\n      setPoints(newPoints);\n      updatePoints(newPoints);\n      setLastUpdateTime(time);\n      \n      // Check for level up\n      const newLevelData = calculateLevel(newPoints);\n      if (newLevelData.currentLevel > currentLevel) {\n        showNotification(`🎉 تقدمت للمستوى ${newLevelData.currentLevel}!`);\n      }\n    }\n  }, [time, isRunning]);\n\n  // Load theme and language preferences\n  useEffect(() => {\n    const savedMode = JSON.parse(localStorage.getItem('darkMode'));\n    if (savedMode !== null) {\n      setDarkMode(savedMode);\n      document.documentElement.setAttribute('data-theme', savedMode ? 'dark' : 'light');\n    }\n\n    const savedLang = localStorage.getItem('language') || 'ar';\n    setLanguage(savedLang);\n  }, []);\n\n  // Remove member from group\n  const removeMember = async (memberId) => {\n    if (window.confirm(`هل أنت متأكد من حذف هذا العضو من المجموعة؟`)) {\n      try {\n        await runTransaction(db, async (transaction) => {\n          const groupDoc = await transaction.get(doc(db, \"studyGroups\", groupId));\n          if (!groupDoc.exists()) throw new Error(\"المجموعة غير موجودة\");\n          \n          const groupData = groupDoc.data();\n          const updatedMembers = groupData.members.filter(m => m !== memberId);\n          const updatedUserPoints = {...groupData.userPoints};\n          delete updatedUserPoints[memberId];\n          \n          transaction.update(doc(db, \"studyGroups\", groupId), {\n            members: updatedMembers,\n            userPoints: updatedUserPoints\n          });\n        });\n        showNotification(\"تم حذف العضو بنجاح\");\n      } catch (error) {\n        console.error(\"Error removing member:\", error);\n        showNotification(\"حدث خطأ أثناء حذف العضو\");\n      }\n    }\n  };\n\n  // Ban/unban member\n  const toggleBanMember = async (memberId) => {\n    if (window.confirm(`هل أنت متأكد من ${bannedMembers.includes(memberId) ? 'إلغاء حظر' : 'حظر'} هذا العضو؟`)) {\n      try {\n        await runTransaction(db, async (transaction) => {\n          const groupDoc = await transaction.get(doc(db, \"studyGroups\", groupId));\n          if (!groupDoc.exists()) throw new Error(\"المجموعة غير موجودة\");\n          \n          const groupData = groupDoc.data();\n          const currentBanned = groupData.bannedMembers || [];\n          const isBanned = currentBanned.includes(memberId);\n          \n          const updatedBanned = isBanned \n            ? currentBanned.filter(id => id !== memberId)\n            : [...currentBanned, memberId];\n          \n          const updates = {\n            bannedMembers: updatedBanned,\n            banHistory: arrayUnion({\n              memberId: memberId,\n              bannedBy: user.uid,\n              timestamp: new Date(),\n              action: isBanned ? \"unban\" : \"ban\"\n            })\n          };\n          \n          if (!isBanned) {\n            updates[`userPoints.${memberId}`] = 0;\n          }\n          \n          transaction.update(doc(db, \"studyGroups\", groupId), updates);\n        });\n        \n        showNotification(`تم ${bannedMembers.includes(memberId) ? 'إلغاء حظر' : 'حظر'} العضو بنجاح`);\n      } catch (error) {\n        console.error(\"Error updating banned members:\", error);\n        showNotification(\"حدث خطأ أثناء تحديث قائمة الحظر\");\n      }\n    }\n  };\n\n  // Reset timer and save session\n  const resetTimer = () => {\n    if (time > 0) {\n      addStudySession(time, Math.floor(time / 30));\n    }\n    setIsRunning(false);\n    setTime(0);\n  };\n\n  return (\n    <div className=\"timer-container\">\n      {/* Header Section */}\n      <div className=\"timer-header\">\n        <button onClick={onBack} className=\"back-button\">\n          ← العودة للمجموعات\n        </button>\n        \n        <div className=\"user-info\" onClick={() => setShowProfileMenu(!showProfileMenu)}>\n          <div className=\"avatar-container\">\n            <img src={user.photoURL} alt=\"صورة المستخدم\" className=\"user-avatar\" />\n            {onlineUsers.includes(user.uid) && <div className=\"online-status\"></div>}\n          </div>\n          <span className=\"user-display-name\">{user.displayName}</span>\n          {bannedMembers.includes(user.uid) && (\n            <span className=\"banned-warning\">(حسابك محظور)</span>\n          )}\n        </div>\n      </div>\n\n      {/* Profile Menu */}\n      {showProfileMenu && (\n        <div className=\"profile-menu\">\n          <div className=\"menu-item\" onClick={() => {\n            setShowProfileModal(true);\n            setShowProfileMenu(false);\n          }}>\n            الملف الشخصي\n          </div>\n          <div className=\"menu-item\" onClick={() => {\n            setShowSettingsModal(true);\n            setShowProfileMenu(false);\n          }}>\n            الإعدادات\n          </div>\n        </div>\n      )}\n\n      {/* Main Timer Display */}\n      <div className=\"timer-display\">\n        <div className=\"time-display\">\n          <h2>وقت المذاكرة</h2>\n          <div className=\"time\">{formatTime(time)}</div>\n        </div>\n        \n        <div className=\"stats-display\">\n          <div className=\"stat-box\">\n            <span className=\"stat-label\">النقاط</span>\n            <span className=\"stat-value\">{points}</span>\n          </div>\n          \n          <div className=\"stat-box\">\n            <span className=\"stat-label\">المستوى</span>\n            <span className=\"stat-value\">{currentLevel}</span>\n          </div>\n        </div>\n        \n        {/* Progress Bar */}\n        <div className=\"progress-container\">\n          <div className=\"progress-label\">\n            <span>التقدم للمستوى {currentLevel + 1}</span>\n            <span>{Math.round(progress)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n          <div className=\"progress-text\">\n            {pointsToNextLevel} نقطة متبقية للوصول للمستوى التالي\n          </div>\n        </div>\n        \n        {/* Timer Controls */}\n        <div className=\"timer-controls\">\n          <button \n            onClick={() => setIsRunning(!isRunning)}\n            className={`control-button ${isRunning ? 'pause-button' : 'start-button'}`}\n            disabled={bannedMembers.includes(user.uid)}\n          >\n            {isRunning ? 'إيقاف' : 'بدء'}\n          </button>\n          \n          <button \n            onClick={resetTimer}\n            className=\"control-button reset-button\"\n          >\n            إعادة تعيين\n          </button>\n          \n          <button\n            onClick={() => setShowMembers(!showMembers)}\n            className=\"control-button members-button\"\n          >\n            {showMembers ? 'إخفاء الأعضاء' : 'عرض الأعضاء'}\n          </button>\n        </div>\n      </div>\n\n      {/* Members Sidebar */}\n      {showMembers && (\n        <div className=\"members-sidebar\">\n          <h3>ترتيب المجموعة</h3>\n          \n          {loadingMembers ? (\n            <div className=\"loading-container\">\n              <div className=\"spinner\"></div>\n              <p>جاري تحميل الأعضاء...</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"leaderboard\">\n                {members\n                  .filter(member => !bannedMembers.includes(member.uid))\n                  .map((member, index) => (\n                    <div key={member.uid} className={`member-item ${member.uid === user.uid ? 'current-user' : ''}`}>\n                      <span className=\"member-rank\">{index + 1}</span>\n                      \n                      <div className=\"avatar-container\">\n                        <img src={member.photoURL} alt={member.name} className=\"member-avatar\" />\n                        {onlineUsers.includes(member.uid) && <div className=\"online-status\"></div>}\n                      </div>\n                      \n                      <div className=\"member-info\">\n                        <span className=\"member-name\">{member.name}</span>\n                        <span className=\"member-points\">{member.points} نقطة</span>\n                      </div>\n                      \n                      {isCreator && member.uid !== user.uid && (\n                        <div className=\"member-actions\">\n                          <button \n                            onClick={() => toggleBanMember(member.uid)}\n                            className=\"ban-button\"\n                            title={bannedMembers.includes(member.uid) ? \"إلغاء الحظر\" : \"حظر العضو\"}\n                          >\n                            {bannedMembers.includes(member.uid) ? \"🚫\" : \"⛔\"}\n                          </button>\n                          <button \n                            onClick={() => removeMember(member.uid)}\n                            className=\"remove-button\"\n                            title=\"حذف العضو\"\n                          >\n                            ✕\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ))\n                }\n              </div>\n              \n              {bannedMembers.length > 0 && (\n                <div className=\"banned-section\">\n                  <h4>الأعضاء المحظورين</h4>\n                  {members\n                    .filter(member => bannedMembers.includes(member.uid))\n                    .map((member) => (\n                      <div key={member.uid} className=\"member-item banned-member\">\n                        <div className=\"avatar-container\">\n                          <img src={member.photoURL} alt={member.name} className=\"member-avatar\" />\n                        </div>\n                        \n                        <div className=\"member-info\">\n                          <span className=\"member-name\">{member.name}</span>\n                          <span className=\"banned-label\">محظور</span>\n                        </div>\n                        \n                        {isCreator && (\n                          <button \n                            onClick={() => toggleBanMember(member.uid)}\n                            className=\"unban-button\"\n                          >\n                            إلغاء الحظر\n                          </button>\n                        )}\n                      </div>\n                    ))\n                  }\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Profile Modal */}\n      {showProfileModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowProfileModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <button className=\"close-button\" onClick={() => setShowProfileModal(false)}>\n              &times;\n            </button>\n            \n            <div className=\"profile-header\">\n              <img src={user.photoURL} alt=\"صورة الملف الشخصي\" className=\"profile-avatar\" />\n              <h2>{user.displayName}</h2>\n              <p className=\"user-level\">المستوى {currentLevel}</p>\n            </div>\n            \n            <div className=\"profile-stats\">\n              <div className=\"stat-row\">\n                <span className=\"stat-label\">إجمالي النقاط:</span>\n                <span className=\"stat-value\">{points}</span>\n              </div>\n              \n              <div className=\"stat-row\">\n                <span className=\"stat-label\">إجمالي وقت الدراسة:</span>\n                <span className=\"stat-value\">{Math.floor(time / 3600)} ساعة</span>\n              </div>\n              \n              <div className=\"stat-row\">\n                <span className=\"stat-label\">النقاط للوصول للمستوى التالي:</span>\n                <span className=\"stat-value\">{pointsToNextLevel}</span>\n              </div>\n            </div>\n            \n            {studySessions.length > 0 && (\n              <div className=\"sessions-history\">\n                <h3>آخر جلسات الدراسة</h3>\n                <div className=\"sessions-list\">\n                  {studySessions.map((session, index) => (\n                    <div key={index} className=\"session-item\">\n                      <span className=\"session-date\">\n                        {new Date(session.date).toLocaleDateString()}\n                      </span>\n                      <span className=\"session-duration\">\n                        {formatTime(session.duration)}\n                      </span>\n                      <span className=\"session-points\">\n                        +{session.pointsEarned} نقطة\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Settings Modal */}\n      {showSettingsModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowSettingsModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <button className=\"close-button\" onClick={() => setShowSettingsModal(false)}>\n              &times;\n            </button>\n            \n            <h2>الإعدادات</h2>\n            \n            <div className=\"settings-option\">\n              <span>الوضع المظلم:</span>\n              <label className=\"switch\">\n                <input \n                  type=\"checkbox\" \n                  checked={darkMode} \n                  onChange={toggleDarkMode}\n                />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            \n            <div className=\"settings-option\">\n              <span>اللغة:</span>\n              <select \n                value={language} \n                onChange={(e) => changeLanguage(e.target.value)}\n                className=\"language-select\"\n              >\n                <option value=\"ar\">العربية</option>\n                <option value=\"en\">English</option>\n              </select>\n            </div>\n            \n            <button \n              className=\"logout-button\"\n              onClick={() => {\n                signOut(auth);\n                setShowSettingsModal(false);\n              }}\n            >\n              تسجيل الخروج\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Notification */}\n      {notification && (\n        <div className=\"notification\">\n          {notification}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [groupName, setGroupName] = useState('');\n  const [groups, setGroups] = useState([]);\n  const [loadingGroups, setLoadingGroups] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [showJoinModal, setShowJoinModal] = useState(false);\n  const [joinCode, setJoinCode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [language, setLanguage] = useState('ar');\n  const [notification, setNotification] = useState(null);\n\n  // Show notification\n  const showNotification = (message) => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Toggle dark/light theme\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    document.documentElement.setAttribute('data-theme', newMode ? 'dark' : 'light');\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n    showNotification(newMode ? 'تم تفعيل الوضع المظلم' : 'تم تفعيل الوضع الفاتح');\n  };\n\n  // Load theme preference\n  useEffect(() => {\n    const savedMode = JSON.parse(localStorage.getItem('darkMode'));\n    if (savedMode !== null) {\n      setDarkMode(savedMode);\n      document.documentElement.setAttribute('data-theme', savedMode ? 'dark' : 'light');\n    }\n  }, []);\n\n  // Auth state listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      if (currentUser) {\n        await setDoc(doc(db, \"users\", currentUser.uid), {\n          displayName: currentUser.displayName,\n          photoURL: currentUser.photoURL,\n          email: currentUser.email,\n          lastLogin: new Date()\n        }, { merge: true });\n        \n        setUser(currentUser);\n        await fetchUserGroups(currentUser.uid);\n      } else {\n        setUser(null);\n        setGroups([]);\n        setSelectedGroup(null);\n      }\n    });\n    \n    return () => unsubscribe();\n  }, []);\n\n  // Fetch user's groups\n  const fetchUserGroups = async (userId) => {\n    setLoadingGroups(true);\n    try {\n      const q = query(\n        collection(db, \"studyGroups\"),\n        where(\"members\", \"array-contains\", userId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      const groupsArray = [];\n      \n      const groupsPromises = querySnapshot.docs.map(async (docSnap) => {\n        const groupData = docSnap.data();\n        \n        if (groupData.bannedMembers?.includes(userId)) {\n          return null;\n        }\n        \n        const creatorDoc = await getDoc(doc(db, \"users\", groupData.creator));\n        const creatorName = creatorDoc.exists() ? creatorDoc.data().displayName : \"مستخدم غير معروف\";\n        \n        return { \n          id: docSnap.id, \n          ...groupData,\n          creatorName,\n          code: docSnap.id.slice(0, 6).toUpperCase(),\n          isCreator: groupData.creator === userId\n        };\n      });\n      \n      const groups = (await Promise.all(groupsPromises)).filter(Boolean);\n      setGroups(groups);\n      \n      if (selectedGroup && !groups.some(g => g.id === selectedGroup)) {\n        setSelectedGroup(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user groups:\", error);\n      showNotification(\"حدث خطأ أثناء جلب المجموعات\");\n    } finally {\n      setLoadingGroups(false);\n    }\n  };\n\n  // Google login\n  const handleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      showNotification(`مرحباً ${result.user.displayName}!`);\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n      showNotification(\"حدث خطأ أثناء تسجيل الدخول\");\n    }\n  };\n\n  // Logout\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      showNotification(\"تم تسجيل الخروج بنجاح\");\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n\n  // Create new group\n  const addStudyGroup = async () => {\n    if (!groupName.trim()) {\n      showNotification(\"الرجاء إدخال اسم المجموعة\");\n      return;\n    }\n    \n    try {\n      const newGroup = {\n        name: groupName.trim(),\n        createdAt: new Date(),\n        creator: user.uid,\n        members: [user.uid],\n        userPoints: { [user.uid]: 0 },\n        bannedMembers: []\n      };\n      \n      await addDoc(collection(db, \"studyGroups\"), newGroup);\n      setGroupName('');\n      showNotification(`تم إنشاء مجموعة \"${groupName.trim()}\" بنجاح`);\n      await fetchUserGroups(user.uid);\n    } catch (error) {\n      console.error(\"Error adding group:\", error);\n      showNotification(\"حدث خطأ أثناء إنشاء المجموعة\");\n    }\n  };\n\n  // Delete group\n  const deleteGroup = async (groupId) => {\n    if (window.confirm(\"هل أنت متأكد من حذف هذه المجموعة؟ سيتم حذف جميع بياناتها نهائياً\")) {\n      try {\n        const groupItem = document.getElementById(`group-${groupId}`);\n        if (groupItem) {\n          groupItem.style.transform = 'scale(0.9)';\n          groupItem.style.opacity = '0.5';\n          groupItem.style.transition = 'all 0.3s ease';\n          groupItem.style.animation = 'shake 0.5s';\n          \n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n        \n        await deleteDoc(doc(db, \"studyGroups\", groupId));\n        showNotification(\"تم حذف المجموعة بنجاح\");\n        await fetchUserGroups(user.uid);\n      } catch (error) {\n        console.error(\"Error deleting group:\", error);\n        showNotification(\"حدث خطأ أثناء حذف المجموعة\");\n      }\n    }\n  };\n\n  // Join group by code\n  const joinGroupByCode = async () => {\n    if (!joinCode.trim()) {\n      showNotification(\"الرجاء إدخال كود المجموعة\");\n      return;\n    }\n    \n    try {\n      const allGroupsQuery = collection(db, \"studyGroups\");\n      const allGroupsSnapshot = await getDocs(allGroupsQuery);\n      \n      let groupToJoin = null;\n      allGroupsSnapshot.forEach(doc => {\n        const groupCode = doc.id.slice(0, 6).toUpperCase();\n        if (groupCode === joinCode.toUpperCase().trim()) {\n          groupToJoin = { \n            id: doc.id, \n            ...doc.data(),\n            code: groupCode\n          };\n        }\n      });\n      \n      if (groupToJoin) {\n        if (groupToJoin.bannedMembers?.includes(user.uid)) {\n          showNotification(`أنت محظور من هذه المجموعة (${groupToJoin.name})`);\n          return;\n        }\n        \n        if (groupToJoin.members && groupToJoin.members.includes(user.uid)) {\n          setSelectedGroup(groupToJoin.id);\n          setShowJoinModal(false);\n          setJoinCode('');\n          return;\n        }\n        \n        await updateDoc(doc(db, \"studyGroups\", groupToJoin.id), {\n          [`userPoints.${user.uid}`]: 0,\n          members: [...(groupToJoin.members || []), user.uid]\n        });\n        \n        setSelectedGroup(groupToJoin.id);\n        setShowJoinModal(false);\n        setJoinCode('');\n        showNotification(`تم الانضمام إلى مجموعة \"${groupToJoin.name}\"`);\n        await fetchUserGroups(user.uid);\n      } else {\n        showNotification(\"لا توجد مجموعة بهذا الكود\");\n      }\n    } catch (error) {\n      console.error(\"Error joining group:\", error);\n      showNotification(\"حدث خطأ أثناء الانضمام للمجموعة\");\n    }\n  };\n\n  // Handle join group\n  const handleJoinGroup = (groupId) => {\n    setSelectedGroup(groupId);\n  };\n\n  // Back to groups list\n  const handleBackToGroups = () => {\n    setSelectedGroup(null);\n  };\n\n  if (selectedGroup && user) {\n    return (\n      <div className=\"App\">\n        <Timer \n          user={user} \n          onBack={handleBackToGroups}\n          groupId={selectedGroup}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <button \n        onClick={toggleDarkMode} \n        className=\"theme-toggle\"\n        aria-label={darkMode ? 'تفعيل الوضع الفاتح' : 'تفعيل الوضع الغامق'}\n      >\n        {darkMode ? '☀️' : '🌙'}\n      </button>\n      \n      <header className=\"App-header\">\n        <div className=\"login-container\">\n          {!user ? (\n            <div className=\"welcome-screen\">\n              <h1>مجموعات الدراسة التعاونية</h1>\n              <p>انضم إلى مجتمع المذاكرة مع الأصدقاء وحقق أهدافك التعليمية</p>\n              <button className=\"login-button\" onClick={handleLogin}>\n                <span>تسجيل الدخول باستخدام Google</span>\n              </button>\n            </div>\n          ) : (\n            <div className=\"user-welcome\">\n              <div className=\"user-info\">\n                <img src={user.photoURL} alt=\"صورة المستخدم\" className=\"user-avatar\" />\n                <div className=\"user-details\">\n                  <h2>مرحباً {user.displayName}!</h2>\n                  <button className=\"logout-button\" onClick={handleLogout}>\n                    تسجيل الخروج\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {user && (\n          <div className=\"group-management\">\n            <div className=\"group-creation\">\n              <h2>إنشاء مجموعة جديدة</h2>\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  value={groupName}\n                  onChange={(e) => setGroupName(e.target.value)}\n                  placeholder=\"أدخل اسم المجموعة\"\n                  onKeyPress={(e) => e.key === 'Enter' && addStudyGroup()}\n                />\n                <button className=\"create-button\" onClick={addStudyGroup}>\n                  إنشاء\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"join-group\">\n              <h2>الانضمام إلى مجموعة</h2>\n              <button \n                className=\"join-button\"\n                onClick={() => setShowJoinModal(true)}\n              >\n                الانضمام بمجموعة موجودة\n              </button>\n            </div>\n          </div>\n        )}\n\n        {user && (\n          <div className=\"study-groups\">\n            <h2>مجموعاتك الدراسية</h2>\n            \n            {loadingGroups ? (\n              <div className=\"loading-container\">\n                <div className=\"spinner\"></div>\n                <p>جاري تحميل المجموعات...</p>\n              </div>\n            ) : groups.length === 0 ? (\n              <div className=\"empty-state\">\n                <img src=\"/empty-groups.svg\" alt=\"لا توجد مجموعات\" className=\"empty-image\" />\n                <p>لا توجد مجموعات متاحة حالياً</p>\n                <button \n                  className=\"create-button\"\n                  onClick={() => document.querySelector('.group-creation input').focus()}\n                >\n                  إنشاء مجموعة جديدة\n                </button>\n              </div>\n            ) : (\n              <div className=\"groups-grid\">\n                {groups.map((group) => (\n                  <div key={group.id} id={`group-${group.id}`} className=\"group-card\">\n                    <div className=\"group-content\">\n                      <h3 className=\"group-name\">{group.name}</h3>\n                      <p className=\"group-meta\">\n                        <span className=\"group-creator\">المنشئ: {group.creatorName}</span>\n                        <span className=\"group-code\">كود: {group.code}</span>\n                      </p>\n                      {group.isCreator && <span className=\"creator-badge\">أنت المنشئ</span>}\n                    </div>\n                    \n                    <div className=\"group-actions\">\n                      <button \n                        onClick={() => handleJoinGroup(group.id)} \n                        className=\"join-button\"\n                      >\n                        دخول المجموعة\n                      </button>\n                      \n                      {group.isCreator && (\n                        <button \n                          onClick={() => deleteGroup(group.id)} \n                          className=\"delete-button\"\n                        >\n                          حذف المجموعة\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {showJoinModal && (\n          <div className=\"modal-overlay\" onClick={() => setShowJoinModal(false)}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n              <button className=\"close-button\" onClick={() => setShowJoinModal(false)}>\n                &times;\n              </button>\n              \n              <h2>الانضمام إلى مجموعة</h2>\n              <p>أدخل كود المجموعة المكون من 6 أحرف</p>\n              \n              <input\n                type=\"text\"\n                value={joinCode}\n                onChange={(e) => setJoinCode(e.target.value)}\n                placeholder=\"أدخل كود المجموعة\"\n                maxLength={6}\n                className=\"join-input\"\n              />\n              \n              <div className=\"modal-actions\">\n                <button onClick={joinGroupByCode} className=\"confirm-button\">\n                  تأكيد الانضمام\n                </button>\n                <button \n                  onClick={() => setShowJoinModal(false)} \n                  className=\"cancel-button\"\n                >\n                  إلغاء\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {notification && (\n          <div className=\"notification\">\n            {notification}\n          </div>\n        )}\n\n        <footer className=\"app-footer\">\n          <p>تم تطويره بواسطة محمد أبو طبيخ © {new Date().getFullYear()}</p>\n        </footer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && typeof onPerfEntry === 'function') {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    }).catch((error) => {\n      console.log('Error importing web-vitals:', error);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom'; // تغيير من 'react-dom/client' إلى 'react-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// تغيير طريقة التصيير لتتوافق مع React 17\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();"],"sourceRoot":""}